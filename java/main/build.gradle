/*
 * Copyright 2021 EPAM Systems, Inc
 *
 * See the NOTICE file distributed with this work for additional information
 * regarding copyright ownership. Licensed under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

apply plugin: 'java-library'
apply plugin: "maven-publish"
apply plugin: 'signing'

sourceCompatibility=1.8
targetCompatibility=1.8

group "com.epam.deltix"

buildscript {
    repositories {
        mavenCentral()
    }
}

repositories {
    mavenCentral()
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    archiveBaseName = archivesBaseName
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    archiveBaseName = archivesBaseName
    from javadoc.destinationDir
}

dependencies {
    implementation 'org.ow2.asm:asm-tree:7.2'
    implementation 'org.ow2.asm:asm-util:7.2'
    implementation 'org.json:json:20171018'
}

task generateVersionJava {
    doLast {

        new File("$projectDir/src/main/java/com/epam/deltix/vtype/transformer/Version.java").text =
"""
// Autogenerated file, do not edit
package com.epam.deltix.vtype.transformer;

class  Version {
    public static final String version = \"$version\";
}
"""
    }
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

compileJava.dependsOn generateVersionJava

jar {
    manifest {
        attributes (
                "Implementation-Title": "Deltix Value Types For Java",
                "Implementation-Version": archiveVersion,
                'PreMain-Class': 'com.epam.deltix.vtype.transformer.AgentPreMain',
                'Agent-Class': 'com.epam.deltix.vtype.transformer.AgentPreMain',
                'Can-Redefine-Classes': 'true',
                'Can-Retransform-Classes': 'false',
                'Can-Set-Native-Method-Prefix': 'false'
        )
    }
    from { fileTree(dir: 'src/main/java', includes: [ '**/*.class', '**/*.properties' ]) }
}

java {
    withJavadocJar()
    withSourcesJar()
}

def rUser = findProperty('SONATYPE_NEXUS_USERNAME') ?:  System.getenv('SONATYPE_NEXUS_USERNAME') ?: "FakeUser"
def rPass = findProperty('SONATYPE_NEXUS_PASSWORD') ?:  System.getenv('SONATYPE_NEXUS_PASSWORD') ?: "FakePass"

publishing {
    repositories {
        maven {
            url = findProperty('SONATYPE_REPOSITORY') ?:  System.getenv('SONATYPE_REPOSITORY') ?: "FakeRepo"

            credentials {
                username rUser
                password rPass
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = 'value-types'
                packaging = 'jar'
                description = 'Java Agent classloader to implement transformation of operations on specific classes into operations on long integer values.'
                url = 'https://github.com/epam/ValuesTypes4Java'

                scm {
                    connection = 'scm:git:https://github.com/epam/ValuesTypes4Java.git'
                    developerConnection = 'scm:git:https://github.com/epam/ValuesTypes4Java.git'
                    url = 'https://github.com/epam/ValuesTypes4Java.git'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'alex-karpovich'
                        name = 'Alexander Karpovich'
                        email = 'aliaksandr_karpovich@epam.com'
                        url = 'https://github.com/alex-karpovich'
                        organization = 'EPAM Systems'
                        organizationUrl = 'https://www.epam.com/'
                    }
                }
            }
        }
    }

    signing {
        def signingKey = findProperty('SIGNING_PRIVATE_KEY') ?: System.getenv('SIGNING_PRIVATE_KEY') ?: "FakeUser"
        def signingPassword = findProperty('SIGNING_PASSWORD') ?: System.getenv('SIGNING_PASSWORD') ?: "FakePass"

        useInMemoryPgpKeys(signingKey, signingPassword)
        sign publishing.publications.mavenJava

        required { isReleaseVersion }
    }
}