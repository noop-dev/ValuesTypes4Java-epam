apply plugin: "java"

sourceCompatibility=11
targetCompatibility=11

group "com.epam.deltix"

buildscript {
    repositories {
        mavenCentral()
    }
}

repositories {
    mavenCentral()
}

configurations.implementation.canBeResolved true
configurations.testImplementation.canBeResolved true

dependencies {
    testImplementation 'com.google.code.java-allocation-instrumenter:java-allocation-instrumenter:3.1.0'
    testImplementation group: "junit", name: "junit", version: "4.+"
    testImplementation group: "com.fasterxml.jackson.core", name: "jackson-databind", version: "2.9.4"

    testImplementation "com.epam.deltix:dfp:$dfpVersion"
    testImplementation project(':java:value-types')
}

sourceSets {
    test {
        java {
            srcDir "../test8/src/test/java"
            srcDir "../test8/src/main/java"
        }
    }
}

test {
    outputs.upToDateWhen { false }
    def disableAllocationDetector = true
    def javaAllocationInstrumenterJar = configurations.testImplementation.find {it.name.contains('java-allocation-instrumenter')}
    def vtAgentJar = configurations.testImplementation.find {it.name.contains('value-types-0')}

    def valueTypeAgent = '-javaagent:' + vtAgentJar + '=' + rootDir + "/cfg/valuetype-tests.json"
    jvmArgs += valueTypeAgent

    def allocationAgent = '-javaagent:' + javaAllocationInstrumenterJar

    if(disableAllocationDetector) {
        jvmArgs += '-Ddisable.allocation.detector=true'
    } else {
        jvmArgs += allocationAgent
    }

    testLogging {
        exceptionFormat 'full'
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}